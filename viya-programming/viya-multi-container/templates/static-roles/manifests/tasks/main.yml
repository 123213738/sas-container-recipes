---
- name: Create temporary directory on remote machine
  file:
    path: "{{ playbook_dir + '/manifests/' + item }}"
    state: directory
  with_items:
  - "kubernetes"
  - "kubernetes/deployments"
  - "kubernetes/configmaps"
  - "kubernetes/secrets"

- name: Create k8s configmaps
  template:
    src: "k8s_configmap.j2"
    dest: "{{ playbook_dir }}/manifests/kubernetes/configmaps/{{ item.key }}.yml"
    dest: "{% if item.key == 'sas-casserver-primary' %}{{ playbook_dir }}/manifests/kubernetes/configmaps/cas.yml{% else %}{{ playbook_dir }}/manifests/kubernetes/configmaps/{{ item.key }}.yml{% endif %}"
  when: item.value.deployment_overrides.environment is defined and item.value.deployment_overrides.environment
  with_dict: '{{ services }}'

- name: Create k8s secrets
  template:
    src: "k8s_secrets.j2"
    dest: "{% if item.key == 'sas-casserver-primary' %}{{ playbook_dir }}/manifests/kubernetes/secrets/cas.yml{% else %}{{ playbook_dir }}/manifests/kubernetes/secrets/{{ item.key }}.yml{% endif %}"
  when: item.value.deployment_overrides.secrets is defined and item.value.deployment_overrides.secrets
  with_dict: '{{ services }}'

- name: Create pets k8s manifest 
  template:
    src: "pets_k8s.j2"
    dest: "{{ playbook_dir }}/manifests/kubernetes/deployments/{{ item.key }}.yml"
  when: item.key in 'httpproxy, pgpoolc, programming, rabbitmq, sas-casserver-primary, sasdatasvrc'
  with_dict: '{{ services }}'

- name: Create CAS worker manifest
  template:
    src: "casworker_k8s.j2"
    dest: "{{ playbook_dir }}/manifests/kubernetes/deployments/cas-worker.yml"
  when: item.key in 'sas-casserver-primary'
  with_dict: '{{ services }}'
