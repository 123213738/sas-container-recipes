---
# tasks file for sas-install

- name: Add repository information
  template:
    src: "{{ item.file }}"
    dest: "{{ item.loc }}"
    mode: "u=rw,g=rw,o=r"
  with_items:
    - { file: sas.repo.j2, loc: "/etc/yum.repos.d/sas.repo" }
  when: (METAREPO_INSTALL | bool == false)

- name: Get epoch and use that as our id
  local_action: set_fact tmpcertloc="{{ '/tmp/tmp.' + ansible_date_time.epoch }}"
  run_once: yes

- name: Create temporary directory on remote machine
  file:
    path: "{{ tmpcertloc }}"
    state: directory
  when: ( METAREPO_INSTALL | bool ) == true

- name: Set the location of the temp directory
  set_fact:
    METAREPO_CERT_DIR: "{{ tmpcertloc }}"
  when: ( METAREPO_INSTALL | bool ) == true

# Configure yum so we can install the meta repo definition and the entitled repo definitions
- name: Copy certificates to remote machine
  copy:
    src: "{{ item }}"
    dest: "{{ METAREPO_CERT_DIR + '/' + item }}"
  when: ( METAREPO_INSTALL | bool ) == true
  with_items:
    - "{{ METAREPO_CERT_CLIENT }}"
    - "{{ METAREPO_CERT_CA }}"

- block:

  - name: Rebuild rpm db
    shell: rpm --rebuilddb

  # Install repo definitions
  - name: Shell script to install repository definitions
    shell: |
      # Download and install the SAS meta repo, containing all sub-repositories for software orders
      curl --silent --location --cert {{ METAREPO_CERT_DIR }}/{{ METAREPO_CERT_CLIENT }} --cacert {{ METAREPO_CERT_DIR }}/{{ METAREPO_CERT_CA }} {{ METAREPO_URL }}{{ METAREPO_RPM }} --output {{ METAREPO_CERT_DIR }}/{{ METAREPO_RPM }}
      yum install --assumeyes {{ METAREPO_CERT_DIR }}/{{ METAREPO_RPM }}
      cp --verbose {{ METAREPO_CERT_DIR }}/{{ METAREPO_CERT_CLIENT }} {{ METAREPO_CERT_HOME }}/{{ METAREPO_CERT_CLIENT }}

      yum install -y {{ METAREPO_SOE_ORDERABLE }}
    when: ( METAREPO_INSTALL | bool ) == true

  #
  # Parse the file and get all the things to install: rpms and groups
  - name: Collect yum groups
    set_fact:
      groups_to_install: |-
        {% for key, value in sas_host_group_variables.iteritems() %}
        {%-   for platform, listing in value.iteritems() %}
        {%-     for installable, details in listing.iteritems() %}
        {%-       if details['SERVICE_YUM_GROUP'] is defined %}"@{{ details['SERVICE_YUM_GROUP'] }}" {% endif %}
        {%-     endfor %}
        {%-   endfor %}
        {% endfor %}

  - name: Collect rpms
    set_fact:
      packages_to_install: |-
        {% for key, value in sas_host_group_variables.iteritems() %}
        {%-   for platform, listing in value.iteritems() %}
        {%-     for installable, details in listing.iteritems() %}
        {%-       if details['SERVICE_YUM_PACKAGE'] is defined %}{{ details['SERVICE_YUM_PACKAGE'] }} {% endif %}
        {%-     endfor %}
        {%-   endfor %}
        {% endfor %}

  # Install rpms
  - name: Print out yum group fact
    debug:
      msg: "yum install --assumeyes {{ groups_to_install }}"
    when: groups_to_install | default([]) | length > 0

  - name: Update and install SAS groups
    command: 'yum install --assumeyes {{ groups_to_install }}'
    args:
      warn: no
    when: groups_to_install | default([]) | length > 0

  - name: Print out rpm fact
    debug:
      msg: "yum install --assumeyes {{ packages_to_install }}"

  - name: Install SAS packages
    command: 'yum install --assumeyes {{ packages_to_install }}'
    args:
      warn: no
    when: packages_to_install | default([]) | length > 0

  - name: Uninstall the SAS repository definitions
    shell: |
      yum erase --assumeyes {{ METAREPO_SOE_ORDERABLE }}
      yum erase --assumeyes sas-meta-repo*
      yum clean all
      rm --recursive --force /root/.cache /var/cache/yum

      rm --verbose {{ METAREPO_CERT_HOME }}/{{ METAREPO_CERT_CLIENT }}
    when: ( METAREPO_INSTALL | bool ) == true

  when:
  - ansible_os_family == 'RedHat'

- block:

  - name: Collect rpms
    set_fact:
      packages_to_install: |-
        {% for key, value in sas_host_group_variables.iteritems() %}
        {%-   for platform, listing in value.iteritems() %}
        {%-     for installable, details in listing.iteritems() %}
        {%-       if details['SERVICE_YUM_PACKAGE'] is defined %}{{ details['SERVICE_YUM_PACKAGE'] }} {% endif %}
        {%-     endfor %}
        {%-   endfor %}
        {% endfor %}

  # Install rpms
  - name: Print out rpm fact
    debug:
      msg: "zypper --non-interactive --no-gpg-checks install {{ packages_to_install }}"

  - name: Install SAS packages
    command: 'zypper --non-interactive --no-gpg-checks install {{ packages_to_install }}'
    args:
      warn: no
    when: packages_to_install | default([]) | length > 0

  when: ansible_os_family == 'Suse'

- name: Remove sas.repo file
  file:
    path: /etc/yum.repos.d/sas.repo
    state: absent
  when: ( METAREPO_INSTALL | bool ) == false

- name: Remove temporary directory {{ METAREPO_CERT_DIR }}
  file:
    path: "{{ METAREPO_CERT_DIR }}"
    state: absent
  when: ( METAREPO_INSTALL | bool ) == true
