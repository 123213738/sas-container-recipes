apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/server-snippet: |
      gzip off;
{% if "espserver" in services %}
    nginx.org/websocket-services: {{ settings.project_name }}-espserver
{% endif %}
  name: {{ settings.project_name }}-visuals-ingress
  namespace: {{ SAS_K8S_NAMESPACE }}
spec:
  rules:
  - host: {{ settings.project_name }}.{{ SAS_K8S_NAMESPACE }}.{{ SAS_K8S_INGRESS_DOMAIN }}
    http:
      paths:
      - backend:
          serviceName: {{ settings.project_name }}-httpproxy
          servicePort: 80
{% if "espserver" in services %}
  - host: {{ settings.project_name }}-esp-design.{{ SAS_K8S_NAMESPACE }}.{{ SAS_K8S_INGRESS_DOMAIN }}
    http:
      paths:
      - backend:
          serviceName: {{ settings.project_name }}-espserver
          servicePort: 31415
{% endif %}
#  tls:
#  - hosts:
#    - {{ settings.project_name }}.{{ SAS_K8S_NAMESPACE }}.{{ SAS_K8S_INGRESS_DOMAIN }}
{% if "espserver" in services %}
#    - {{ settings.project_name }}-esp-design.{{ SAS_K8S_NAMESPACE }}.{{ SAS_K8S_INGRESS_DOMAIN }}
#    - {{ settings.project_name }}-esp-run-time.{{ SAS_K8S_NAMESPACE }}.{{ SAS_K8S_INGRESS_DOMAIN }}
#    - {{ settings.project_name }}-esp-metered-billing.{{ SAS_K8S_NAMESPACE }}.{{ SAS_K8S_INGRESS_DOMAIN }}
{% endif %}
#    secretName: @REPLACE_ME_WITH_YOUR_CERT@
