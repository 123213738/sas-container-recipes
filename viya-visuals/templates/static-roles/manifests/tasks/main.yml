---
- name: Create the deployment directory to place kubernetes manifests in
  file:
    path: "{{ playbook_dir + '/' + item }}"
    state: directory
  with_items:
  - "deploy"

- name: Create temporary directory on remote machine
  file:
    path: "{{ playbook_dir + '/deploy/' + item }}"
    state: directory
  with_items:
  - "kubernetes"
  - "kubernetes/smp"
  - "kubernetes/mpp"
  - "kubernetes/configmaps"
  - "kubernetes/secrets"

- name: Create k8s configmaps
  template:
    src: "k8s_configmap.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/configmaps/{{ item.key }}.yml"
  when: item.value.deployment_overrides.environment is defined and item.value.deployment_overrides.environment
  with_dict: '{{ services }}'

- name: Create k8s secrets
  template:
    src: "k8s_secrets.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/secrets/{{ item.key }}.yml"
  when: item.value.deployment_overrides.secrets is defined and item.value.deployment_overrides.secrets
  with_dict: '{{ services }}'

- name: Define variable to indicate what type of manifest we are creating
  set_fact:
    cas_manifest_type: "smp"

- name: Create k8s domain service
  template:
    src: "domain-service_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/smp/domain-service.yml"

- name: Create Consul k8s manifest
  template:
    src: "consul_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/smp/{{ item.key }}.yml"
  when: item.key == 'consul'
  with_dict: '{{ services }}'

- name: Create pets k8s manifest
  template:
    src: "pets_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/smp/{{ item.key }}.yml"
  when: item.key in 'httpproxy, pgpoolc, programming, rabbitmq, sas-casserver-primary, sasdatasvrc'
  with_dict: '{{ services }}'

- name: Create micro-services k8s manifest
  template:
    src: "microservice_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/smp/{{ item.key }}.yml"
  when: item.key not in 'consul, httpproxy, pgpoolc, programming, rabbitmq, sas-casserver-primary, sasdatasvrc'
  with_dict: '{{ services }}'

- name: Define variable to indicate what type of manifest we are creating
  set_fact:
    cas_manifest_type: "mpp"

- name: Create k8s domain service
  template:
    src: "domain-service_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/mpp/domain-service.yml"

- name: Create Consul k8s manifest
  template:
    src: "consul_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/mpp/{{ item.key }}.yml"
  when: item.key == 'consul'
  with_dict: '{{ services }}'

- name: Create pets k8s manifest 
  template:
    src: "pets_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/mpp/{{ item.key }}.yml"
  when: item.key in 'httpproxy, pgpoolc, programming, rabbitmq, sas-casserver-primary, sasdatasvrc'
  with_dict: '{{ services }}'

- name: Create micro-services k8s manifest
  template:
    src: "microservice_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/mpp/{{ item.key }}.yml"
  when: item.key not in 'consul, httpproxy, pgpoolc, programming, rabbitmq, sas-casserver-primary, sasdatasvrc'
  with_dict: '{{ services }}'

- name: Create CAS worker manifest
  template:
    src: "casworker_k8s.j2"
    dest: "{{ playbook_dir }}/deploy/kubernetes/mpp/sas-casserver-worker.yml"
  when: item.key in 'sas-casserver-primary'
  with_dict: '{{ services }}'

